(function () {
    angular.module('PatientModule', ['ngResource'])
        .controller('PatientController',
            function ($scope, $http, $route, $location, $log, $filter, $timeout, uiCalendarConfig, modalPopups, appointmentModalPopup, selectAppointmentModalPopup, PatientService, PatientClinicService, PatientAppointmentService, PatientAvailableAppointmentService) {
                $log.debug("Inside PatientController");

                $scope.showMouseHourGlass = false;
                $scope.selectedPatient = {};
                $scope.patients = [];
                $scope.patientTabs = {active: 1};
               // $scope.showAvailableAppointments = false;
                $scope.selectedAppointment = {};
                $scope.appointments = [];

                $scope.calendarRendered = false;

                /* alert on dayClick */
                $scope.alertDayOnClick = function( date, jsEvent, view){

                    $log.debug('Inside alertDayOnClick');
                    $scope.alertMessage = (date.title + ' was clicked ');
                };

                /* alert on eventClick */
                $scope.alertOnEventClick = function(calEvent){

                    $log.debug('Inside alertOnEventClick', calEvent);
                    //$scope.alertMessage = ('clicked on event: ', calEvent);

                    if (calEvent.status === "DRAFT") {

                        appointmentPopup("Appointment Details", 'P', calEvent, function(accept){

                            $log.debug('accept: ', accept);

                            if (accept == true){

                                $scope.selectedAppointment = calEvent;

                                $log.debug('calEvent: ', calEvent);

                                $scope.schedulePatientAppointment();
                            }
                        });
                    }
                    else{
                        appointmentPopup("Appointment Details", 'P', calEvent);
                    }


                };
                /* alert on Drop */
                $scope.alertOnDrop = function(event, delta, revertFunc, jsEvent, ui, view){
                    $log.debug('Inside alertOnDrop');

                    $scope.alertMessage = ('Event Droped to make dayDelta ' + delta);
                };


                /* alert on Resize */
                $scope.alertOnResize = function(event, delta, revertFunc, jsEvent, ui, view ){
                    $log.debug('Inside alertOnResize');

                    $scope.alertMessage = ('Event Resized to make dayDelta ' + delta);
                };

                /* Render Tooltip */
                 function eventRender( event, element, view ) {
                    $log.debug('Inside eventRender');


                }

                /* add custom event*/
                $scope.addEvent = function() {
                    $scope.events.push({
                        title: 'Open Sesame',
                        start: new Date(y, m, 28),
                        end: new Date(y, m, 29),
                        className: ['openSesame']
                    });
                };
                /* remove event */
                $scope.remove = function(index) {
                    $scope.events.splice(index,1);
                };

                function alertPopup(message, type, cb) {
                    modalPopups.alertWindowPopup(message, type, cb);
                }

                function appointmentPopup(message, type, event, cb) {
                    appointmentModalPopup.appointmentPopupWindow(message, type, event, cb);
                }

                $scope.selectAppointmentPopup = function() {
                    selectAppointmentModalPopup.appointmentPopupWindow($scope.selectedPatient.name, function(selAppointment){

                        $log.debug('got selAppointment: ', selAppointment);


                        $scope.selectedAppointment = JSON.parse(selAppointment);

                        $scope.schedulePatientAppointment();
                    });
                };

                //with this you can handle the events that generated by each page render process
                function renderView(view){

                    $log.debug('Inside renderView, view: ', view);

                }

                /* Update Calendar View */
                function renderCalender(calendarName, action) {

                    $log.debug('Inside renderCalender, name: ', calendarName);

                    if(uiCalendarConfig.calendars[calendarName]){

                        $log.debug('call: ' + action);

                        if (action === "render"){
                            $scope.calendarRendered = true;
                        }

                        $timeout(function() {
                            uiCalendarConfig.calendars[calendarName].fullCalendar(action);  //refetchEvents //render rerenderEvents
                        }, 20); // delay 10 ms
                    }

                }

                $scope.uiConfig = {
                    calendar:{
                        defaultView: 'agendaWeek',   //'agendaWeek',
                        nowIndicator: true,
                        firstDay: 1,
                        hiddenDays: [ 0 ], // hide Sunday
                        minTime: "08:00",
                        maxTime : "20:00",  // 18:00
                        allDaySlot: false,
                        // businessHours: {
                        //     // days of week. an array of zero-based day of week integers (0=Sunday)
                        //     dow: [ 1, 2, 3, 4, 5, 6 ], // Monday - Saturday
                        //     start: '08:00', // a start time (8am in this example)
                        //     end: '18:00' // an end time (6pm in this example)
                        // },
                        displayEventTime: true,
                        height: 515,
                        editable: true,
                        header:{
                            left: 'month agendaWeek agendaDay myCustomButton',
                            center: 'title',
                            right: 'today prev,next'
                        },
                        // resources: resources,
                        dayClick: $scope.alertDayOnClick,
                        eventClick: $scope.alertOnEventClick,
                        eventDrop: $scope.alertOnDrop,
                        eventResize: $scope.alertOnResize,
                        eventRender: eventRender,
                        viewRender: renderView,
                        // customButtons: {
                        //     myCustomButton: {
                        //         text: 'my button',
                        //         click: function() {
                        //             alert('clicked the custom button!');
                        //         }
                        //     }
                        // },
                        schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
                        groupByDateAndResource: true
                    }
                };

                $scope.eventsF = function (start, end, timezone, callback) {
                    $log.debug('Inside eventsF');

                    var calStart = new Date(start);
                    var calEnd = new Date(end);
                    $log.debug('cal start date: ', calStart);
                    $log.debug('cal end date: ',  calEnd);

                    var events = [];    //$scope.appointments;

                    //true if d is between the start and end (inclusive)
                    //false if d is before start or after end.
                    // NaN if one or more of the dates are illegal.
                    $scope.appointments.forEach(function(appointment){

                        var appStart = appointment.start;

                        //$log.debug('check appointment, appStart: ',  appStart);
                        if ((appStart >= calStart) && (appStart <= calEnd)){

                            $log.debug('appointment in range, appStart: ',  appStart);
                            events.push(appointment);
                        }
                        else{
                            $log.debug('skip appointment not in range, appStart: ',  appStart);
                        }
                    });

                    $log.debug('new events: ', events);
                    callback(events);
                    //callback($scope.appointments);
                };

                $scope.eventSources = [$scope.eventsF];

                $scope.loadAllPatients = function () {
                    $log.debug('Inside loadAllPatients');

                    $scope.showMouseHourGlass = true;
                    PatientService.get(function (response) {

                            $log.debug('loadAllPhysicians received data: ', response);
                            $scope.showMouseHourGlass = false;
                            $scope.physicians = response;
                            //alertPopup('Successfully loaded all clinics', 'Info');

                        },
                        function (err) {
                            $log.error('loadAllPhysicians:received an error: ', err);
                            $scope.showMouseHourGlass = false;
                            // err: {data: "", status: 415, config: Object, statusText: "Unsupported Media Type"}
                            if (err.data) {
                                $scope.errorMessages = err.data.message;
                            }
                            else if (err.statusText) {
                                $scope.errorMessages = [err.status + ":" + err.statusText];
                            }
                            else {
                                $scope.errorMessages = ['Unknown  server error'];
                            }
                            //alertPopup('Unable to load Clinic Data, error: ' + $scope.errorMessages, 'Error');
                        });


                };

                $scope.refreshCalendar = function(){

                    $log.debug("Inside refreshCalendar, active["+ $scope.patientTabs.active + "]");

                    if ($scope.calendarRendered === true){

                        renderCalender("patientSchedule", "refetchEvents");
                    }
                    else{
                        renderCalender("patientSchedule", "render");
                    }


                    //changeView('agendaDay', "physicianSchedule");
                };

                $scope.selectPatient = function () {
                    $log.debug("Inside selectPatient, name[" + $scope.selectedPatient.name + "]");

                    //$log.debug("first Patient: ", $scope.patients[0]);

                    var selected = $filter('filter')($scope.patients, {name: $scope.selectedPatient.name}, true);
                    $scope.selectedPatient.obj = selected[0];
                    $log.debug("selectedPatient: ", $scope.selectedPatient.obj);

                    // reset the calendar by removing any previous appointments
                    uiCalendarConfig.calendars["patientSchedule"].fullCalendar('removeEvents');

                    $scope.appointments = [];

                    // Show patient treatments on calendar
                    $scope.selectedPatient.obj.appointments.forEach(function(appointment){
                            addAppointment(appointment);
                    });

                    //$scope.showPatientAvailableAppointments();
                    $log.debug("active["+ $scope.patientTabs.active + "]");

                    if ($scope.patientTabs.active === 1){

                        //uiCalendarConfig.calendars["clinicSchedule"].fullCalendar('renderEvent',$scope.appointments[0],true);

                        //renderCalender("patientSchedule", "refetchEvents");
                        $scope.refreshCalendar();

                        //changeView('agendaDay', "patientSchedule");
                    }
                };



                $scope.getPatient = function () {
                    $log.debug('Inside getPatient, name: ', $scope.selectedPatient.name);

                    $scope.showMouseHourGlass = true;
                    PatientService.get({name:$scope.selectedPatient.name}, function (response) {

                            $log.debug('getPatient received data: ', response);
                            $scope.showMouseHourGlass = false;

                            //alertPopup('Successfully loaded Patient', 'Info');
                            //$location.path('/patient');

                            // response.appointments.forEach(function(appointment){
                            //     $log.debug('found appointment id/type: ', appointment.id, appointment.type);
                            //
                            //     if ($scope.selectedAppointment.id === appointment.id){
                            //
                            //         $log.debug('got updated appointment: ', appointment);
                            //     }
                            // });

                            // It is important to update patient in clinic patient list
                            var patient = $filter('filter')($scope.patients, {name: $scope.selectedPatient.name}, true);
                            patient[0].appointments = response.appointments;


                            $scope.selectPatient();

                        },
                        function (err) {
                            console.error('getPatient:received an error: ', err);
                            $scope.showMouseHourGlass = false;
                            // err: {data: "", status: 415, config: Object, statusText: "Unsupported Media Type"}
                            if (err.data) {
                                $scope.errorMessages = err.data.message;
                            }
                            else if (err.statusText) {
                                $scope.errorMessages = [err.status + ":" + err.statusText];
                            }
                            else {
                                $scope.errorMessages = ['Unknown  server error'];
                            }
                            //alertPopup('Unable to load Patient, error: ' + $scope.errorMessages, 'Error');
                        });


                };

                function loadClinicPatients(clinicName, patientName){


                    $log.debug('Inside loadClinicPatients, clinicName: ' + clinicName + ', patientName: ' + patientName);

                    $scope.showMouseHourGlass = true;
                    PatientClinicService.get({name: clinicName}, function (response) {

                            $log.debug('loadClinicPatients received data: ', response);
                            $scope.showMouseHourGlass = false;
                            $scope.patients = response;
                            //alertPopup('Successfully loaded all clinics', 'Info');

                        if (patientName != undefined){

                            $scope.selectPatient();
                        }

                        },
                        function (err) {
                            $log.error('loadClinicPatients:received an error: ', err);
                            $scope.showMouseHourGlass = false;
                            // err: {data: "", status: 415, config: Object, statusText: "Unsupported Media Type"}
                            if (err.data) {
                                $scope.errorMessages = err.data.message;
                            }
                            else if (err.statusText) {
                                $scope.errorMessages = [err.status + ":" + err.statusText];
                            }
                            else {
                                $scope.errorMessages = ['Unknown  server error'];
                            }
                            //alertPopup('Unable to load Clinic Data, error: ' + $scope.errorMessages, 'Error');
                        });
                }

                function addAppointment(appointment) {

                    $log.debug('Inside addAppointment, appointment: ', appointment);

                    //var title = "Appointment with Physician";    // + appointment.patientName;
                    var appDate = appointment.appointmentDate;
                    var startTime =  new Date(appDate.year, (appDate.monthValue - 1), appDate.dayOfMonth,
                        appointment.startTime.hour, appointment.startTime.minute);

                    var endTime = new Date(appDate.year, (appDate.monthValue - 1), appDate.dayOfMonth,
                        appointment.endTime.hour, appointment.endTime.minute);

                    var title = "Treatment for " + appointment.patientName;
                    var appColor = "green";

                    if (appointment.type === "A"){

                        if (appointment.status === "DRAFT"){
                            appColor = "grey";
                            title = "Available Appointment for "
                        }
                        else{   // ACCEPTED
                            appColor = "blue";
                            title = "Appointment for ";
                        }
                    }
                    else{
                        title = "Treatment for ";
                    }

                    title += appointment.patientName;

                    var newAppointment = {title: title,start: startTime, end: endTime,
                        resourceIds: [appointment.roomId],
                        clinicName: appointment.clinicName,
                        patientName: appointment.patientName,
                        color: appColor,
                        status: appointment.status,
                        id:appointment.id,
                        physicianName: appointment.physicianName,
                        allDay: false };


                    // var newAppointment = {title: title, start: startTime, end: endTime,
                    //     resourceIds: [appointment.roomId],
                    //     color: appColor,
                    //     status: appointment.status,
                    //     id: appointment.id,
                    //     physician:appointment.physician.name,
                    //     allDay: false };


                    $scope.appointments.push(newAppointment);
                    //uiCalendarConfig.calendars["patientSchedule"].fullCalendar('renderEvent',newAppointment,true);

                    //$log.debug("add event: ", newAppointment);
                }

                $scope.schedulePatientAppointment = function () {

                    $log.debug("Inside schedulePatientAppointment, id: ", $scope.selectedAppointment.id);

                    $scope.showMouseHourGlass = true;

                    // toggle the view
                    // if ($scope.showAvailableAppointments == true){
                    //
                    //     $scope.showAvailableAppointments = false;
                    //     // need to present a list of appointments to select from
                    // }
                    // else{
                    //     $scope.showAvailableAppointments = true;
                    // }

                    // now schedule the given appointment
                    PatientAppointmentService.get({id: $scope.selectedAppointment.id}, function (response) {

                            $log.debug('schedulePatientAppointment received data: ', response);
                            $scope.showMouseHourGlass = false;

                            alertPopup('Successfully scheduled appointment', 'Info');

                            // now reload all appointments for this patient
                            $scope.getPatient();


                            // $scope.appointments.forEach(function(appointment){
                            //
                            //     $log.debug("check appointment, id: ", appointment.id);
                            //     if (appointment.id === $scope.selectedAppointment.id){
                            //
                            //         $log.debug("mark appointment as accepted, id: ", appointment.id);
                            //         // make the appointment accepted
                            //         appointment.status = "ACCEPTED";
                            //         addAppointment(appointment);
                            //     }
                            //
                            // });

                        },
                        function (err) {
                            $log.error('schedulePatientAppointment:received an error: ', err);
                            $scope.showMouseHourGlass = false;
                            // err: {data: "", status: 415, config: Object, statusText: "Unsupported Media Type"}
                            if (err.data) {
                                $scope.errorMessages = err.data.message;
                            }
                            else if (err.statusText) {
                                $scope.errorMessages = [err.status + ":" + err.statusText];
                            }
                            else {
                                $scope.errorMessages = ['Unknown  server error'];
                            }
                            alertPopup("Unable to schedule Patient's appointment, error: " + $scope.errorMessages, 'Error');
                        });

                };


                $scope.viewClinic = function () {

                    $log.debug("Inside viewClinic, clinic: ", $scope.clinicName);

                    $location.url('/clinic?clinicName=' + $scope.clinicName);
                }

                function init() {
                    $log.info("Inside init");

                    if ($route.current.params != undefined && $route.current.params.clinicName != undefined) {

                        $log.debug("Inside init:PARAMS", $route.current.params);
                        $scope.clinicName = $route.current.params.clinicName;
                        $scope.selectedPatient.name = $route.current.params.patientName;

                        $log.debug("clinicName: " + $scope.clinicName + ", patientName: " + $scope.selectedPatient.name);

                        loadClinicPatients($scope.clinicName, $scope.selectedPatient.name);
                    }



                }

                init();
            });
})();