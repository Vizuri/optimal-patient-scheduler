angular.module('PhysicianModule', ['ngResource'])
    .controller('PhysicianController', function ($scope, $http, $location, $route, $log, $compile, $filter, $timeout, uiCalendarConfig, modalPopups, PhysicianService, PhysicianAppointmentService) {
        $log.debug("Inside PhysicianController");

        $scope.showMouseHourGlass = false;

        $scope.physicians = [];
        $scope.selectedPhysician = {};
        $scope.physicianTabs = {active: 1};
        $scope.appointments = [];
        $scope.calendarRendered = false;


        // var date = new Date();
        // var d = date.getDate();
        // var m = date.getMonth();
        // var y = date.getFullYear();


        // $scope.events = [
        //     //{title: 'All Day Event',start: new Date(y, m, 1), resourceIds: ['a', 'b']},
        //     {title: 'Appointment with P1',start: new Date(y, m, 1, 8, 0), end: new Date(y, m, 1, 12, 0), allDay: false },
        //     {title: 'Long Event',start: new Date(y, m, d - 5),end: new Date(y, m, d - 2)},
        //     {id: 999,title: 'Repeating Event',start: new Date(y, m, d - 3, 16, 0),allDay: false},
        //     {id: 999,title: 'Repeating Event',start: new Date(y, m, d + 4, 16, 0),allDay: false},
        //     {title: 'Birthday Party',start: new Date(y, m, d + 1, 19, 0),end: new Date(y, m, d + 1, 22, 30),allDay: false},
        //     {title: 'Click for Google',start: new Date(y, m, 28),end: new Date(y, m, 29),url: 'http://google.com/'}
        // ];

        /* alert on dayClick */
        $scope.alertDayOnClick = function( date, jsEvent, view){

            $log.debug('Inside alertDayOnClick');
            $scope.alertMessage = (date.title + ' was clicked ');
        };

        /* alert on eventClick */
        $scope.alertOnEventClick = function(event){

            $log.debug('Inside alertOnEventClick', event);
            //$scope.alertMessage = ('clicked on event: ', event);
        };
        /* alert on Drop */
        $scope.alertOnDrop = function(event, delta, revertFunc, jsEvent, ui, view){
            $log.debug('Inside alertOnDrop');

            $scope.alertMessage = ('Event Droped to make dayDelta ' + delta);
        };
        /* alert on Resize */
        $scope.alertOnResize = function(event, delta, revertFunc, jsEvent, ui, view ){
            $log.debug('Inside alertOnResize');

            $scope.alertMessage = ('Event Resized to make dayDelta ' + delta);
        };

        /* Render Tooltip */
        $scope.eventRender = function( event, element, view ) {
            $log.debug('Inside eventRender');

            element.attr({'tooltip': event.title,
                'tooltip-append-to-body': true});
            $compile(element)($scope);
        };

        /* add custom event*/
        $scope.addEvent = function() {
            $scope.events.push({
                title: 'Open Sesame',
                start: new Date(y, m, 28),
                end: new Date(y, m, 29),
                className: ['openSesame']
            });
        };
        /* remove event */
        $scope.remove = function(index) {
            $scope.events.splice(index,1);
        };

        //changeView('agendaDay', myCalendar)
        /* Change View */
        function changeView(view,calendarName) {

            $timeout(function() {
                uiCalendarConfig.calendars[calendarName].fullCalendar('changeView',view);
            }, 10);

        }

        //with this you can handle the events that generated by each page render process
        function renderView(view){

            $log.debug('Inside renderView, view: ', view);

        }

        /* Update Calendar View */
        function renderCalender(calendarName, action) {

            $log.debug('Inside renderCalender, name: ', calendarName);

            if(uiCalendarConfig.calendars[calendarName]){

                $log.debug('call: ' + action);

                if (action === "render"){
                    $scope.calendarRendered = true;
                }

                $timeout(function() {
                    uiCalendarConfig.calendars[calendarName].fullCalendar(action);  //render rerenderEvents
                }, 20); // delay 10 ms


            }
        }

        function alertPopup(message, type, cb) {
            modalPopups.alertWindowPopup(message, type, cb);
        }

        $scope.uiConfig = {
            calendar:{
                defaultView: 'agendaWeek',   //'agendaWeek',
                nowIndicator: true,
                firstDay: 1,
                hiddenDays: [ 0 ], // hide Sunday
                minTime: "08:00",
                maxTime : "18:00",
                allDaySlot: false,
                // businessHours: {
                //     // days of week. an array of zero-based day of week integers (0=Sunday)
                //     dow: [ 1, 2, 3, 4, 5, 6 ], // Monday - Saturday
                //     start: '08:00', // a start time (8am in this example)
                //     end: '18:00' // an end time (6pm in this example)
                // },
                displayEventTime: true,
                height: 515,
                editable: true,
                header:{
                    left: 'listMonth month agendaWeek agendaDay myCustomButton',
                    center: 'title',
                    right: 'today prev,next'
                },
               // resources: resources,
                dayClick: $scope.alertDayOnClick,
                eventClick: $scope.alertOnEventClick,
                eventDrop: $scope.alertOnDrop,
                eventResize: $scope.alertOnResize,
                eventRender: $scope.eventRender,
                // customButtons: {
                //     myCustomButton: {
                //         text: 'my button',
                //         click: function() {
                //             alert('clicked the custom button!');
                //         }
                //     }
                // },
                views: {
                    month: { // name of view
                        buttonText: 'Month'
                    },
                    agendaWeek: {
                        buttonText: 'Week'
                    },
                    agendaDay: {
                        buttonText: 'Day'
                    },
                    listMonth: {
                        buttonText: 'Month List'
                    }
                },
                schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
                groupByDateAndResource: true
            }
        };

        $scope.eventsF = function (start, end, timezone, callback) {
            $log.debug('Inside eventsF');

            var calStart = new Date(start);
            var calEnd = new Date(end);
            $log.debug('cal start date: ', calStart);
            $log.debug('cal end date: ',  calEnd);

            var events = [];    //$scope.appointments;

            //true if d is between the start and end (inclusive)
            //false if d is before start or after end.
            // NaN if one or more of the dates are illegal.
            $scope.appointments.forEach(function(appointment){

                var appStart = appointment.start;

                //$log.debug('check appointment, appStart: ',  appStart);
                if ((appStart >= calStart) && (appStart <= calEnd)){

                    $log.debug('appointment in range, appStart: ',  appStart);
                    events.push(appointment);
                }
                else{
                    $log.debug('skip appointment not in range, appStart: ',  appStart);
                }
            });

            $log.debug('new events: ', events);
            callback(events);
            //callback($scope.appointments);
        };

        $scope.eventSources = [$scope.eventsF];
        //$scope.eventSources = [$scope.events];



        $scope.loadAllPhysicians = function (cb) {

            $log.debug('Inside loadAllPhysicians');

            $scope.showMouseHourGlass = true;
            PhysicianService.get(function (response) {

                    $log.debug('loadAllPhysicians received data: ');    //, response);
                    $scope.showMouseHourGlass = false;
                    $scope.physicians = response;
                    //alertPopup('Successfully loaded all clinics', 'Info');
                    cb();

                },
                function (err) {
                    $log.error('loadAllPhysicians:received an error: ', err);
                    $scope.showMouseHourGlass = false;
                    // err: {data: "", status: 415, config: Object, statusText: "Unsupported Media Type"}
                    if (err.data) {
                        $scope.errorMessages = err.data.message;
                    }
                    else if (err.statusText) {
                        $scope.errorMessages = [err.status + ":" + err.statusText];
                    }
                    else {
                        $scope.errorMessages = ['Unknown  server error'];
                    }
                    //alertPopup('Unable to load Clinic Data, error: ' + $scope.errorMessages, 'Error');
                    cb(err);
                });


        };

        $scope.selectPhysician = function () {
            $log.debug("Inside selectPhysician, name[" + $scope.selectedPhysician.name + "]");

            var selected = $filter('filter')($scope.physicians, {name: $scope.selectedPhysician.name}, true);
            $scope.selectedPhysician.obj = selected[0];
            $log.debug("selectedPhysician: ", $scope.selectedPhysician.obj);

            // reset the calendar by removing any previous appointments
            uiCalendarConfig.calendars["physicianSchedule"].fullCalendar('removeEvents');

            $scope.appointments = [];

            // Show patient treatments on calendar
            $scope.selectedPhysician.obj.appointments.forEach(function(appointment){
                addAppointment(appointment);
            });

            //$scope.showPatientAvailableAppointments();
            $log.debug("active["+ $scope.physicianTabs.active + "]");

            if ($scope.physicianTabs.active === 1){

                //uiCalendarConfig.calendars["clinicSchedule"].fullCalendar('renderEvent',$scope.appointments[0],true);

                //renderCalender("physicianSchedule", "refetchEvents");
                $scope.refreshCalendar();

                //changeView('agendaDay', "patientSchedule");
            }
        };

        function addAppointment(appointment) {

            $log.debug('Inside addAppointment, appointment: ', appointment);

            var appDate = appointment.appointmentDate;
            var startTime =  new Date(appDate.year, (appDate.monthValue - 1), appDate.dayOfMonth,
                appointment.startTime.hour, appointment.startTime.minute);

            var endTime = new Date(appDate.year, (appDate.monthValue - 1), appDate.dayOfMonth,
                appointment.endTime.hour, appointment.endTime.minute);

            var title = "Appointment with " + appointment.patientName;
            var appColor = "green";

            if (appointment.type === "A"){

                if (appointment.status === "DRAFT"){
                    appColor = "grey";
                    title = "Available Appointment for "
                }
                else{   // ACCEPTED
                    appColor = "blue";
                    title = "Appointment for ";
                }
            }
            else{
                title = "Treatment for ";
            }

            title += appointment.patientName;

            var newAppointment = {title: title,start: startTime, end: endTime,
                resourceIds: [appointment.roomId],
                clinicName: appointment.clinicName,
                patientName: appointment.patientName,
                color: appColor,
                status: appointment.status,
                id:appointment.id,
                physicianName: appointment.physicianName,
                allDay: false };


            // var newAppointment = {title: title, start: startTime, end: endTime,
            //     resourceIds: [appointment.roomId],
            //     color: appColor,
            //     status: appointment.status,
            //     id: appointment.id,
            //     physician:appointment.physician.name,
            //     allDay: false };


            $scope.appointments.push(newAppointment);
            //uiCalendarConfig.calendars["patientSchedule"].fullCalendar('renderEvent',newAppointment,true);

            //$log.debug("add event: ", newAppointment);
        }

        $scope.getPhysicianAppointments = function () {

            $log.info("Inside getPhysicianAppointments, name: ", $scope.selectedPhysician.name);

            $scope.showMouseHourGlass = true;

            PhysicianAppointmentService.get({name: $scope.selectedPhysician.name}, function (response) {

                    $log.debug('getPhysicianAppointments received data: ', response);
                    $scope.showMouseHourGlass = false;
                    $scope.appointments = response;
                    alertPopup('Successfully loaded all appointments', 'Info');

                    $scope.appointments.forEach(function(appointment){

                        addAppointment(appointment);

                    });

                },
                function (err) {
                    $log.error('getPhysicianAppointments:received an error: ', err);
                    $scope.showMouseHourGlass = false;
                    // err: {data: "", status: 415, config: Object, statusText: "Unsupported Media Type"}
                    if (err.data) {
                        $scope.errorMessages = err.data.message;
                    }
                    else if (err.statusText) {
                        $scope.errorMessages = [err.status + ":" + err.statusText];
                    }
                    else {
                        $scope.errorMessages = ['Unknown  server error'];
                    }
                    //alertPopup('Unable to load Clinic Data, error: ' + $scope.errorMessages, 'Error');
                });

        };

        $scope.refreshCalendar = function(){

            $log.debug("Inside refreshCalendar, active["+ $scope.physicianTabs.active + "]");

            if ($scope.calendarRendered === true){

                renderCalender("physicianSchedule", "refetchEvents");
            }
            else{
                renderCalender("physicianSchedule", "render");
            }

            //changeView('agendaDay', "physicianSchedule");
        };

        function init() {
            $log.debug("Inside init");


            $scope.loadAllPhysicians(function(err){

                // this is for viewing the selected physician
                if ($route.current.params != undefined && $route.current.params.physicianName != undefined) {

                    $log.debug("Inside init:PARAMS", $route.current.params);

                    $scope.selectedPhysician.name = $route.current.params.physicianName;

                    $log.debug("clinicName: " + $scope.clinicName + ", patientName: " + $route.current.params.patientName);

                    $scope.selectPhysician();
                }

            });


        }

        init();

    });